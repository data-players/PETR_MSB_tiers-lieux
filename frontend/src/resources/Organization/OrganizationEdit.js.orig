import {default as React,useState,useCallback,useMemo} from 'react';

import { TextInput } from "ra-ui-materialui";
<<<<<<< HEAD
import { Dialog, DialogTitle, DialogContent, DialogActions, makeStyles } from '@material-ui/core';
=======
>>>>>>> 5a32cad47021f3e1c4b61f44b5300809558858b9
import {
  ArrayInput,
  BooleanInput,
  FormTab,
  ImageInput,
  NumberInput,
  SelectInput,
  SimpleFormIterator,
  TabbedForm,
  required,
<<<<<<< HEAD
  useRecordContext,
  ListContextProvider,
  useEditContext,
  useList,
  Datagrid,
  TextField,
  EditButton,
  useEditController,
  Button,
  SimpleForm,
  SaveButton,
  useUpdate,
  useCreate,
  SaveContextProvider,
  CreateContextProvider,
  EditContextProvider,
  FormWithRedirect,
  useRefresh,
  ReferenceInput,
  ReferenceManyField,
  DeleteButton
=======
  useRecordContext
>>>>>>> 5a32cad47021f3e1c4b61f44b5300809558858b9
} from 'react-admin';
import {IconEvent, ContentCreate} from '@material-ui/icons/Event';

import { Edit } from "@semapps/archipelago-layout";
import { MapField } from '@semapps/geo-components';
import { MarkdownInput } from '@semapps/markdown-components'
<<<<<<< HEAD
import { ImageField, ReificationArrayInput } from '@semapps/semantic-data-provider';
=======
import { ImageField, ReferenceInput, ReificationArrayInput } from '@semapps/semantic-data-provider';
import { EditWithPermissions } from '@semapps/auth-provider';
>>>>>>> 5a32cad47021f3e1c4b61f44b5300809558858b9

import { EquipmentsInput } from '../../pair';
import PairLocationInput from '../../components/PairLocationInput';
import EditContextualButton from '../../components/EditContextualButton';
import CreateContextualButton from '../../components/CreateContextualButton';
import Title from '../_Components/Title';
import { Link } from 'react-router-dom';
import { useLocation } from 'react-router';


<<<<<<< HEAD
=======

const useStyles = makeStyles((theme) => ({
  resourceFormContainer: {
    '& section' : {
      flexDirection: 'column',
    }
  },
}));
>>>>>>> 5a32cad47021f3e1c4b61f44b5300809558858b9

export const OrganizationEdit = props => {
  const {
      record, // record fetched via dataProvider.getOne() based on the id from the location
  } = useEditController(props);

  return (
<<<<<<< HEAD
      <Edit title={<Title />} {...props} >
        <TabbedForm>
          <FormTab label="Principal">
            <TextInput source="pair:label" fullWidth validate={[required()]} />
            <ReferenceInput
              source="pair:hasType"
              reference="OrganizationType"
=======
    <EditWithPermissions title={<Title />} {...props} >
      <TabbedForm>
        <FormTab label="Principal">
          <TextInput source="pair:label" fullWidth validate={[required()]} />
          <ReferenceInput
            source="pair:hasType"
            reference="OrganizationType"
            validate={[required()]}
          >
            <SelectInput optionText="pair:label" />
          </ReferenceInput>
          <MarkdownInput source="pair:description" multiline fullWidth />
          <PairLocationInput source="pair:hasLocation" fullWidth />
          <ImageInput source="petr:logo" accept="image/*">
            <ImageField source="src" />
          </ImageInput>
          <ImageInput source="pair:depictedBy" accept="image/*" multiple>
            <ImageField source="src" />
          </ImageInput>
          <ArrayInput source="petr:videos">
            <SimpleFormIterator>
              <TextInput label="Video url"/>
            </SimpleFormIterator>
          </ArrayInput>
          <ReferenceInput
            source="petr:hasLegalStatus"
            reference="LegalStatus"
            validate={[required()]}
          >
            <SelectInput optionText="pair:label" />
          </ReferenceInput>
          <TextInput source="pair:e-mail" type="email" fullWidth/>
          <TextInput source="pair:phone" fullWidth />
          <TextInput source="pair:webPage" fullWidth />
          <ArrayInput source="petr:socialMedias">
            <SimpleFormIterator>
              <TextInput />
            </SimpleFormIterator>
          </ArrayInput>
          <ArrayInput source="petr:hasLabels">
            <SimpleFormIterator>
              <ReferenceInput reference="Label">
              <SelectInput optionText="pair:label" />
            </ReferenceInput>
            </SimpleFormIterator>
          </ArrayInput>
          <ArrayInput source="petr:hasNetworks">
            <SimpleFormIterator>
              <ReferenceInput reference="Network">
              <SelectInput optionText="pair:label" />
            </ReferenceInput>
            </SimpleFormIterator>
          </ArrayInput>
          <ReferenceInput
            source="petr:hasAudience"
            reference="Audience"
          >
            <SelectInput optionText="pair:label" />
          </ReferenceInput>
        </FormTab>
        {/* EQUIPMENTS */}
        <FormTab label="Equipements">
          <ReificationArrayInput
            source="petr:equipmentOffers"
            reificationClass="petr:Equipment"
            class={classes.resourceFormContainer}
          >
            <ReferenceInput
              source="petr:hasEquipmentType"
              reference="EquipmentType"
              validate={[required()]}
            >
              <SelectInput optionText="pair:label" />
            </ReferenceInput>
            <MarkdownInput source="pair:description" multiline fullWidth />
            <TextInput source="petr:model" fullWidth />
            <NumberInput source="petr:amount" defaultValue={1} fullWidth validate={[required()]} />
            <ReferenceInput
              source="petr:hasRate"
              reference="Rate"
              validate={[required()]}
            >
              <SelectInput optionText="pair:label" />
            </ReferenceInput>
            <TextInput source="petr:availablity" fullWidth />{/* TODO */}
            <ReferenceInput
              source="petr:hasAccessModality"
              reference="AccessModality"
              validate={[required()]}
            >
              <SelectInput optionText="pair:label" />
            </ReferenceInput>
          </ReificationArrayInput>
        </FormTab>
        {/* SPACES */}
        <FormTab label="Espaces">
          <ReificationArrayInput
            source="petr:spaceOffers"
            reificationClass="petr:Space"
            class={classes.resourceFormContainer}
          >
            <TextInput source="pair:label" fullWidth validate={[required()]} />
            <MarkdownInput source="pair:description" multiline fullWidth />
            <ReferenceInput
              source="petr:hasRate"
              reference="Rate"
              validate={[required()]}
            >
              <SelectInput optionText="pair:label" />
            </ReferenceInput>
            <NumberInput source="petr:capacity" defaultValue={1} fullWidth validate={[required()]} />
            <ReferenceInput
              source="petr:hasSpaceType"
              reference="SpaceType"
>>>>>>> 5a32cad47021f3e1c4b61f44b5300809558858b9
              validate={[required()]}
            >
              <SelectInput optionText="pair:label" />
            </ReferenceInput>
<<<<<<< HEAD
            <MarkdownInput source="pair:description" multiline fullWidth />
            <PairLocationInput source="pair:hasLocation" fullWidth />
            <ImageInput source="petr:logo" accept="image/*">
              <ImageField source="src" />
            </ImageInput>
            <ImageInput source="pair:depictedBy" accept="image/*" multiple>
              <ImageField source="src" />
            </ImageInput>
            <ArrayInput source="petr:videos">
              <SimpleFormIterator>
                <TextInput label="Video url"/>
              </SimpleFormIterator>
            </ArrayInput>
            <ReferenceInput
              source="petr:hasLegalStatus"
              reference="LegalStatus"
=======
            <EquipmentsInput source="petr:hasEquipments" />
          </ReificationArrayInput>
        </FormTab>
        {/* SERVICES */}
        <FormTab label="Services">
          <ReificationArrayInput
            source="petr:serviceOffers"
            reificationClass="petr:Service"
            class={classes.resourceFormContainer}
          >
            <TextInput source="pair:label" fullWidth validate={[required()]} />
            <ReferenceInput
              source="petr:hasRate"
              reference="Rate"
>>>>>>> 5a32cad47021f3e1c4b61f44b5300809558858b9
              validate={[required()]}
            >
              <SelectInput optionText="pair:label" />
            </ReferenceInput>
            <TextInput source="pair:e-mail" type="email" fullWidth/>
            <TextInput source="pair:phone" fullWidth />
            <TextInput source="pair:webPage" fullWidth />
            <ArrayInput source="petr:socialMedias">
              <SimpleFormIterator>
                <TextInput />
              </SimpleFormIterator>
            </ArrayInput>
            <ArrayInput source="petr:hasLabels">
              <SimpleFormIterator>
                <ReferenceInput reference="Label">
                <SelectInput optionText="pair:label" />
              </ReferenceInput>
              </SimpleFormIterator>
            </ArrayInput>
<<<<<<< HEAD
            <ArrayInput source="petr:hasNetworks">
              <SimpleFormIterator>
                <ReferenceInput reference="Network">
                <SelectInput optionText="pair:label" />
              </ReferenceInput>
              </SimpleFormIterator>
            </ArrayInput>
=======
>>>>>>> 5a32cad47021f3e1c4b61f44b5300809558858b9
            <ReferenceInput
              source="petr:hasAudience"
              reference="Audience"
            >
              <SelectInput optionText="pair:label" />
            </ReferenceInput>
<<<<<<< HEAD
          </FormTab>
          {/* EQUIPMENTS */}
          <FormTab label="Equipements">
            <ReferenceManyField
              addLabel={false}
              reference="Equipment"
              target="petr:equipmentOfferedBy"
            >
              <Datagrid isRowSelectable={()=>(true)}>
                <TextField source="pair:description" />
                <EditContextualButton parent={record} resource="Equipment" reverseReference="petr:equipmentOfferedBy"/>
                <DeleteButton redirect={false}/>
              </Datagrid>
            </ReferenceManyField>
            <CreateContextualButton resource="Equipment" parent={record}  reverseReference="petr:equipmentOfferedBy"/>
          </FormTab>
          {/* SPACES */}
          <FormTab label="Espaces">
            <ReificationArrayInput
              source="petr:spaceOffers"
              reificationClass="petr:Space"
            >
              <TextInput source="pair:label" fullWidth validate={[required()]} />
              <MarkdownInput source="pair:description" multiline fullWidth />
              <ReferenceInput
                source="petr:hasRate"
                reference="Rate"
                validate={[required()]}
              >
                <SelectInput optionText="pair:label" />
              </ReferenceInput>
              <NumberInput source="petr:capacity" defaultValue={1} fullWidth validate={[required()]} />
              <ReferenceInput
                source="petr:hasSpaceType"
                reference="SpaceType"
                validate={[required()]}
              >
                <SelectInput optionText="pair:label" />
              </ReferenceInput>
              <EquipmentsInput source="petr:hasEquipments" />
            </ReificationArrayInput>
          </FormTab>
          {/* SERVICES */}
          <FormTab label="Services">
            <ReificationArrayInput
              source="petr:serviceOffers"
              reificationClass="petr:Service"
            >
              <TextInput source="pair:label" fullWidth validate={[required()]} />
              <ReferenceInput
                source="petr:hasRate"
                reference="Rate"
                validate={[required()]}
              >
                <SelectInput optionText="pair:label" />
              </ReferenceInput>
              <ArrayInput source="petr:hasLabels">
                <SimpleFormIterator>
                  <ReferenceInput reference="Label">
                  <SelectInput optionText="pair:label" />
                </ReferenceInput>
                </SimpleFormIterator>
              </ArrayInput>
              <ReferenceInput
                source="petr:hasAudience"
                reference="Audience"
              >
                <SelectInput optionText="pair:label" />
              </ReferenceInput>
              {/* TODO */}
              <BooleanInput source="petr:itinerant" defaultValue={false} />
              <MarkdownInput source="petr:itinerantDetails" multiline fullWidth />
            </ReificationArrayInput>
          </FormTab>
        </TabbedForm>
      </Edit>
=======
            {/* TODO */}
            <BooleanInput source="petr:itinerant" defaultValue={false} />
            <MarkdownInput source="petr:itinerantDetails" multiline fullWidth />
          </ReificationArrayInput>
        </FormTab>
      </TabbedForm>
    </EditWithPermissions>
>>>>>>> 5a32cad47021f3e1c4b61f44b5300809558858b9
  );
}



export default OrganizationEdit;
